# Final Version - 2.2
# This was the final version I made in the 6 months of my internship.

import re
import argparse
import sys
import tkinter as tk
from tkinter import scrolledtext
import subprocess

# Package required in order to bring up the GUI post processing.
required_packages = ["tkinter"]

def check_install_package(package_name):
    try:
        __import__(package_name)
        return True
    except ImportError:
        return False

def install_package(package_name):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package_name])

# Will look for a the pattern '@-' and format the camera ID surrounded by brackets
def process_log(log_content):
    log_content_no_whitespace = re.sub(r'\s', '', log_content)
    
    pattern = r'\[(\d+)@-?\]'
    numbers_in_brackets = re.findall(pattern, log_content_no_whitespace)
    sorted_unique_numbers = sorted(set(numbers_in_brackets), key=int)
    formatted_numbers = " ".join([f"[{number}]" for number in sorted_unique_numbers])
    output_string = f"Number of matches: {len(sorted_unique_numbers)}\n{formatted_numbers}"
    
    return output_string
# Installing tkinter - Look for mor efficient way to write this.
def main():
    for package in required_packages:
        if not check_install_package(package):
            print(f"Installing {package}...")
            install_package(package)

    parser = argparse.ArgumentParser(description="Parses analyst perf input and prints 0-perfs.")
    args = parser.parse_args()
    
    print("Paste the perfs into the file by right clicking. Press Ctrl+Z followed by Enter when you're done.")
    log_content = sys.stdin.read()
    
    output_string = process_log(log_content)
    
    root = tk.Tk()
    root.title("Filtered Output")
    
    text_widget = scrolledtext.ScrolledText(root, wrap=tk.WORD, width=50, height=20)
    text_widget.insert(tk.END, output_string)
    text_widget.pack(padx=10, pady=10)
    text_widget.configure(state="disabled")
    
    root.mainloop()

if __name__ == "__main__":
    main()
